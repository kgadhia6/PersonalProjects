import numpy as np #Numerical computational library
import matplotlib.pyplot as plt #Graphical plotting library
import matplotlib as mpl

#Domain tuples (lower, upper, amount)
xd = (-2, 2, 5) #Do not confuse with dx
yd = (-2, 2, 5) #Do not confuse with dy
zd = (-2, 2, 5) #Do not confuse with dz

#Graphical parameters
colormap = plt.cm.get_cmap("viridis")
numlevels = 100
plt.rcParams["mathtext.fontset"] = 'stix'


#Differential system parameters
rho = 28
sigma = 10
beta = 8/3

def diffeq(x: float, y: float, z: float) -> np.ndarray:
    dx = sigma*(y-x)
    dy = x*(rho-z) - y
    dz = x*y - beta*z
    return np.array([dx, dy, dz])

x, y, z = np.meshgrid(np.linspace(*xd), np.linspace(*yd), np.linspace(*zd)) #Unpacking our domain tuples into linspace
u, v, w = diffeq(x, y, z)

ax = plt.figure().add_subplot(111, projection='3d')
mag = np.sqrt(u**2 + v**2 + w**2)
norm = mpl.colors.Normalize(vmin = mag.min(), vmax = mag.max() + .01)
mappable = mpl.cm.ScalarMappable(norm, colormap)
for i, val in np.ndenumerate(mag):
    ax.quiver(x[i], y[i], z[i], u[i], v[i], w[i], color=mappable.to_rgba(val), length = .625, normalize=True)
    continue
ax.set_xlabel(r'$x\mathrm{-axis}$')
ax.set_ylabel(r'$y\mathrm{-axis}$')
ax.set_zlabel(r'$z\mathrm{-axis}$')
ax.set_title(r'$\mathrm{Lorenz\ Phase\ Space}$, $\rho = 28,\/ \sigma = 10,\/ \beta = \frac{8}{3}$')
cbar = plt.colorbar(mappable, location='left')
cbar.set_label(r'$\mathrm{Magnitude}$')
plt.show()
